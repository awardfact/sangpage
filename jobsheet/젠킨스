<젠킨스란>
젠킨스는 CI 툴이다 

빌드, 테스트 , 정적분석을 자동으로 실행해줌

젠킨스 없을떄는 개발자별로 브랜치를 만들고
따로 병합을 하는 형태로 진행해서 연속성이 없었음

젠킨스를 활용하면 브랜치별로 병합을 하면
빌드 및 테스트를 진행하게 해준다 테스트 빌드할떄
순서를 정할 필요없이 원할때 할 수 있게되서 연속성이 생긴다

젠킨스는 무료 오픈소스이다

자바를 위해 만들어졌지만 다양한 언어 지원

</젠킨스란>


<젠킨스 구조>
플러그인 구조 - 프로젝트 구조에 맞는 필요한 기능만 넣어서 사용


</젠킨스 구조>


<젠킨스 설정>
젠킨스 설치 후 젠킨스 관리 ->  global tool configration 에 들어가
세팅을 할 수 있다 

sdk 설정

git 깃은 젠킨스 관리 ->  configration system -> Github쪽 name은 알맞게 입력하고 credentails을 등록한다 
kind는 secret text로 하고 userName은 깃 아이디 secret은 깃에서 발급받은 키를 입력해준다 

maven 설정

sdk랑 maven은 강의가 자바여서 설정이 필요간것일수도 있음

설정 후 save를 누른다 

강의에서는 이미 설치되어있는거를 경로 설정하는 방식으로 되어있음


플러그인 관리에서 원하는 플러그인을 다운받아서 사용할 수 있다 


플러그인에서 nodejs를 다운받고 
젠킨스 관리 ->  global tool configration에 노드 js add하고 이름 아무렇게나 입력하고 버전 맞는 노드 선택하고 저장 

깃허브에서 웹훅 생성 


</젠킨스 설정>

<아이템 생성>
새로운 아이템 클릭 원하는 아이템 타입 선택하고 이름 입력 후 ok버튼

설명 입력하고 소스코드 관리 설정 (여기서는 git, git url입력) 
보안 설정 ex)이름 패스워드  , 브랜치 선택

build설정  소스코드의 위치를 지정 



<아이템 생성>



<파이프라인>

파이프라인 스크립트의 최상위는 pipeline{}블로으로 이루어져야한다  세미클론은 사용하지 않는다 

agent 
선택하면 젠킨스 환경이 해당 agent로 설정된다 pipeline바로 밑에는 필수고 stage블럭에서는 선택사항이다 
any - 사용가능한 agent
none - global agent에는 설정되지 않고 각 stage에서 설정
label - 특정 label명으로 된 환경설정
node - label과 유사
docker - 특정 도커 이미지로 수행
dockerfile -도커 파일 기반으로 수행

post 
특정 스테이지 이전 혹은 이후에 실행될 블럭 선택사항이다
always - 실행 끝나고 실행되는 step
changed - previous run과 다른 status면 실행되는 step
failure - 실패하면 실행되는 step
success - 성공하면 실행되는 step
unstable - test fail, code vilation 등일떄 실행되는 step
aborted - 강제로 중지됐을 때 실행되는 step


stages 
stage의 모음이다 
ex) stages{  stage }


step
stage내부 block에서 여러 번 호출될 수 있는 block 



environment - key-value 스타일로 파이프라인 내부에서 사용할 변수로 선언 가능 파이프라인 또는 스테이지 block내부에서 사용 
options - pipeline옵션을 선택적으로 집어넣을 수 있다 사용은 파이프라인 block안쪽에서 사용한다 

</파이프라인>
